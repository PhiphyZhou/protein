-------------
To Do(*): 
* Basic rnn on trajectory data for predicting the next frame (adapted from Tensorflow ptb model)

* Use sequence-to-sequence model to learn feature encoding of a sequence of frames (adpted from Tensorflow translation model) 
    - encoder-decoder.train
      * modify for training on protein data
    * encoder-decoder.encode: a new function for outputing the states of a given sequence
    - seq2seq_model.init
      - redefine loss function in seq2seq_model
        - debug using simple example to make sure the calculation is correct
      - rewrite model_with_buckets using a different loss function
    - Use high-dim self-test data to test new loss function
    - seq2seq.embedding_attention_seq2seq: used to define seq2seq_f()
      No need. Can use seq2seq.basic_rnn_seq2seq
    - seq2seq.model_with_buckets: rewrote it as a new model_with_buckets within seq2seq_model.
    - encoder-decoder.create_model
    - seq2seq_model.get_batch
    - seq2seq_model.step
    - reverse the order of decoder_inputs
    - print out the encoded states
    - compute a single reconstruction error (not for batches)
     
* Do classification on the learned features.
* Go parallel
------------
Done(-):
- Set up Docker image using Dockerfile
- datareader: Preprocessed protein data from pdb files, including window smoothing and batch partition
